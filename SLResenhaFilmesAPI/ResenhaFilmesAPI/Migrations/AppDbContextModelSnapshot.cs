// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResenhaFilmesAPI.Context;

#nullable disable

namespace ResenhaFilmesAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ResenhaFilmesAPI.Models.AdministradorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Administradores", (string)null);
                });

            modelBuilder.Entity("ResenhaFilmesAPI.Models.FilmeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ano")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Filmes", (string)null);
                });

            modelBuilder.Entity("ResenhaFilmesAPI.Models.ResenhaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdFilme")
                        .HasColumnType("int");

                    b.Property<int>("IdVisitante")
                        .HasColumnType("int");

                    b.Property<int>("Nota")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdFilme");

                    b.HasIndex("IdVisitante");

                    b.ToTable("Resenhas", (string)null);
                });

            modelBuilder.Entity("ResenhaFilmesAPI.Models.VisitanteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Visitantes", (string)null);
                });

            modelBuilder.Entity("ResenhaFilmesAPI.Models.ResenhaModel", b =>
                {
                    b.HasOne("ResenhaFilmesAPI.Models.FilmeModel", "Filme")
                        .WithMany("Resenhas")
                        .HasForeignKey("IdFilme")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Fk_Filme_Resenha");

                    b.HasOne("ResenhaFilmesAPI.Models.VisitanteModel", "Visitante")
                        .WithMany("Resenhas")
                        .HasForeignKey("IdVisitante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Fk_Visitante_Resenha");

                    b.Navigation("Filme");

                    b.Navigation("Visitante");
                });

            modelBuilder.Entity("ResenhaFilmesAPI.Models.FilmeModel", b =>
                {
                    b.Navigation("Resenhas");
                });

            modelBuilder.Entity("ResenhaFilmesAPI.Models.VisitanteModel", b =>
                {
                    b.Navigation("Resenhas");
                });
#pragma warning restore 612, 618
        }
    }
}
